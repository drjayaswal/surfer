{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dhruvratanjayaswal/Desktop/Projects/surfer/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/dhruvratanjayaswal/Desktop/Projects/surfer/src/app/dashboard/ai/page.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\ndeclare global {\n  interface Window {\n    SpeechRecognition: any;\n    webkitSpeechRecognition: any;\n    recognition?: any;\n  }\n}\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Sparkles,\n  User,\n  Mail,\n  MessageCircle,\n  Code,\n  Send,\n  Mic,\n  ThumbsUp,\n  ThumbsDown,\n  Copy,\n  Share2,\n  EarIcon,\n  SendHorizonal,\n  FileCheck,\n  CheckSquare,\n  Waves,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Input } from \"@/components/ui/input\";\nimport Image from \"next/image\";\n\ntype Message = {\n  id: string;\n  role: \"user\" | \"assistant\";\n  content: string;\n  timestamp: Date;\n};\n\nexport default function DashboardHome({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [prompt, setPrompt] = useState(\"\");\n  const [copiedMap, setCopiedMap] = useState<{ [key: string]: boolean }>({});\n  const [likedMap, setLikedMap] = useState<{ [key: string]: boolean }>({});\n  const [dislikedMap, setDislikedMap] = useState<{ [key: string]: boolean }>(\n    {}\n  );\n  const [sharedMap, setSharedMap] = useState<{ [key: string]: boolean }>({});\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n\n  const examples = [\n    {\n      title: \"Write a to-do list for a personal project\",\n      icon: <User className=\"h-5 w-5\" />,\n    },\n    {\n      title: \"Generate an email to reply to a job offer\",\n      icon: <Mail className=\"h-5 w-5\" />,\n    },\n    {\n      title: \"Summarize this article in one paragraph\",\n      icon: <MessageCircle className=\"h-5 w-5\" />,\n    },\n    {\n      title: \"How does AI actually work at backstage\",\n      icon: <Code className=\"h-5 w-5\" />,\n    },\n  ];\n\n  // Update current time every minute\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if ((e.ctrlKey || e.metaKey) && e.key === \"Enter\") {\n        handleSendMessage();\n      }\n      if (e.key === \"Escape\") {\n        setPrompt(\"\");\n      }\n      if (e.altKey && e.key === \"m\") {\n        toggleVoiceRecognition();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [prompt]);\n\n  // Get greeting based on time of day\n  const getGreeting = () => {\n    const hour = currentTime.getHours();\n    if (hour < 12) return \"Good Morning\";\n    if (hour < 18) return \"Good Afternoon\";\n    return \"Good Evening\";\n  };\n\n  // Toggle voice recognition\n  const toggleVoiceRecognition = () => {\n    if (!isListening) {\n      startVoiceRecognition();\n    } else {\n      stopVoiceRecognition();\n    }\n  };\n\n  // Start voice recognition\n  const startVoiceRecognition = () => {\n    if (\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window) {\n      const SpeechRecognition =\n        window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = \"en-US\";\n\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n\n      recognition.onresult = (event: any) => {\n        const transcript = Array.from(event.results)\n          .map((res) => (res as SpeechRecognitionResult)[0])\n          .map((result) => result.transcript)\n          .join(\"\");\n\n        setPrompt(transcript);\n      };\n\n      recognition.onerror = (event: any) => {\n        console.error(\"Speech recognition error\", event.error);\n        setIsListening(false);\n      };\n\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n\n      recognition.start();\n      (window as any).recognition = recognition;\n    } else {\n      alert(\"Speech recognition is not supported in your browser.\");\n    }\n  };\n\n  // Stop voice recognition\n  const stopVoiceRecognition = () => {\n    if ((window as any).recognition) {\n      (window as any).recognition.stop();\n      setIsListening(false);\n    }\n  };\n\n  // Handle sending a message\n  const handleSendMessage = async () => {\n    if (!prompt.trim()) return;\n\n    if (isListening) {\n      stopVoiceRecognition();\n    }\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      role: \"user\",\n      content: prompt,\n      timestamp: new Date(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setPrompt(\"\");\n    setIsLoading(true);\n\n    setTimeout(() => {\n      inputRef.current?.focus();\n    }, 0);\n\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1500));\n\n      const aiResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        role: \"assistant\",\n        content: generateMockResponse(prompt),\n        timestamp: new Date(),\n      };\n\n      setMessages((prev) => [...prev, aiResponse]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate a mock response\n  const generateMockResponse = (prompt: string): string => {\n    const responses = [\n      \"I understand you're asking about this topic. Let me provide some insights...\",\n      \"That's an interesting question! Here's what I know about it...\",\n      \"Based on my knowledge, I can tell you that...\",\n      \"I'd be happy to help with that. Here's some information...\",\n      \"Great question! Let me explain how this works...\",\n    ];\n\n    return (\n      responses[Math.floor(Math.random() * responses.length)] +\n      ' This is a simulated response to your query: \"' +\n      prompt +\n      \"\\\". In a real implementation, this would connect to an AI service like OpenAI's API.\"\n    );\n  };\n\n  // Handle example click\n  const handleExampleClick = (example: string) => {\n    setPrompt(example);\n    setTimeout(() => {\n      inputRef.current?.focus();\n    }, 0);\n  };\n\n  // Format timestamp\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-white text-gray-800 relative rounded-xl \">\n      {/* Main Content Area */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Chat Container */}\n        <div\n          ref={chatContainerRef}\n          className=\"flex-1 overflow-y-auto px-4 py-6 pb-32\"\n        >\n          <div className=\"w-full mx-auto\">\n            {messages.length === 0 ? (\n              <div className=\"flex flex-col items-center justify-center min-h-full py-12\">\n                {/* Logo and Branding */}\n                <div className=\"flex flex-col items-center mb-8\">\n                  <div className=\"w-30 h-30\">\n                    <Image\n                      src={\"/Surf.png\"}\n                      width={200}\n                      height={200}\n                      alt=\"surf-logo\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"text-center mb-12\">\n                  <h1 className=\"text-4xl md:text-5xl font-medium mb-4 text-gray-800\">\n                    {getGreeting()},{\" \"}\n                    <span className=\"bg-gradient-to-tr from-sky-400 via-sky-500 to-sky-800 bg-clip-text text-transparent font-bold animate-gradient-x text-shadow-lg\">\n                      Jason\n                    </span>\n                  </h1>\n                  <h2 className=\"text-2xl md:text-3xl font-medium text-gray-600\">\n                    What's on your mind?\n                  </h2>\n                </div>\n                <div className=\"w-full max-w-2xl\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                    {examples.map((example, index) => (\n                      <Card\n                        key={index}\n                        className=\"p-4 cursor-pointer transition-all group bg-white border-gray-200 rounded-xl hover:bg-sky-50 hover:border-sky-500 shadow-none border-0\"\n                        onClick={() => handleExampleClick(example.title)}\n                      >\n                        <div className=\"flex items-center justify-center gap-3\">\n                          {/* Icon with color and scale transition on hover */}\n                          <div className=\"mt-1 text-black transition-all duration-300 group-hover:text-sky-500 group-hover:scale-110\">\n                            {example.icon}\n                          </div>\n\n                          {/* Title text with color transition on hover */}\n                          <p className=\"text-sm text-black transition-all duration-300 group-hover:text-sky-600 group-hover:font-medium\">\n                            {example.title}\n                          </p>\n                        </div>\n                      </Card>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-1 w-full max-w-8xl mx-auto\">\n                {messages.map((message) => {\n                  const isUser = message.role === \"user\";\n                  return (\n                    <div\n                      key={message.id}\n                      className={cn(\n                        \"flex gap-3 group animate-in fade-in-0 slide-in-from-bottom-3 duration-300\",\n                        isUser && \"flex-row-reverse\"\n                      )}\n                    >\n                      <Avatar className=\"h-8 w-8 flex-shrink-0 mt-1\">\n                        {/* <AvatarImage\n                          src={\n                            isUser ? \"/user-avatar.jpg\" : \"/xegality-logo.png\"\n                          }\n                          alt={isUser ? \"User\" : \"Assistant\"}\n                        /> */}\n                        <AvatarFallback\n                          className={cn(\n                            \"text-xs font-medium p-[6px]\",\n                            isUser\n                              ? \" bg-black text-white\"\n                              : \" bg-sky-500 text-white\"\n                          )}\n                        >\n                          {isUser ? <User /> : <Waves />}\n                        </AvatarFallback>\n                      </Avatar>\n                      <div\n                        className={cn(\n                          \"flex-1 min-w-0 max-w-[80%] sm:max-w-[75%] md:max-w-[65%]\",\n                          isUser && \"flex flex-col items-end\"\n                        )}\n                      >\n                        <Card\n                          className={cn(\n                            \"p-3 flex flex-col gap-4 transition-all shadow-none border-0 duration-200 break-words whitespace-pre-wrap\",\n                            isUser\n                              ? \"bg-black/5 text-gray-800\"\n                              : \"bg-sky-600/10 text-sky-600\"\n                          )}\n                        >\n                          <p className=\"text-sm leading-relaxed m-0\">\n                            {message.content}\n                          </p>\n                          <span\n                            className={cn(\n                              \"text-xs\",\n                              isUser ? \"text-black\" : \"text-sky-600\"\n                            )}\n                          >\n                            {formatTime(message.timestamp)}\n                          </span>\n                        </Card>\n                        <motion.div\n                          initial={{ opacity: 0 }}\n                          animate={{ opacity: 1 }}\n                          className=\"flex gap-1 mt-2 transition-opacity duration-200 group-hover:opacity-100 opacity-0\"\n                        >\n                          {/* Like Button */}\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => {\n                              setLikedMap((prev) => ({\n                                ...prev,\n                                [message.id]: true,\n                              }));\n                              setTimeout(() => {\n                                setLikedMap((prev) => ({\n                                  ...prev,\n                                  [message.id]: false,\n                                }));\n                              }, 2000);\n                            }}\n                            className={cn(\n                              \"h-7 w-7 p-0 transition-colors\",\n                              likedMap[message.id]\n                                ? \"bg-green-200 text-green-700 hover:bg-green-200 hover:text-green-700\"\n                                : \"hover:bg-green-100 hover:text-green-600\"\n                            )}\n                          >\n                            <ThumbsUp className=\"h-3 w-3\" />\n                          </Button>\n\n                          {/* Dislike Button */}\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => {\n                              setDislikedMap((prev) => ({\n                                ...prev,\n                                [message.id]: true,\n                              }));\n                              setTimeout(() => {\n                                setDislikedMap((prev) => ({\n                                  ...prev,\n                                  [message.id]: false,\n                                }));\n                              }, 2000);\n                            }}\n                            className={cn(\n                              \"h-7 w-7 p-0 transition-colors\",\n                              dislikedMap[message.id]\n                                ? \"bg-red-200 text-red-700 hover:bg-red-200 hover:text-red-700\"\n                                : \"hover:bg-red-100 hover:text-red-600\"\n                            )}\n                          >\n                            <ThumbsDown className=\"h-3 w-3\" />\n                          </Button>\n\n                          {/* Copy Button */}\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => {\n                              setCopiedMap((prev) => ({\n                                ...prev,\n                                [message.id]: true,\n                              }));\n                              navigator.clipboard.writeText(message.content);\n                              setTimeout(() => {\n                                setCopiedMap((prev) => ({\n                                  ...prev,\n                                  [message.id]: false,\n                                }));\n                              }, 2000);\n                            }}\n                            className={cn(\n                              \"h-7 w-7 p-0 transition-colors\",\n                              copiedMap[message.id]\n                                ? \"bg-blue-200 text-blue-700 hover:bg-blue-200 hover:text-blue-700\"\n                                : \"hover:bg-blue-100 hover:text-blue-600\"\n                            )}\n                          >\n                            {copiedMap[message.id] ? (\n                              <CheckSquare className=\"h-3 w-3\" />\n                            ) : (\n                              <Copy className=\"h-3 w-3\" />\n                            )}\n                          </Button>\n\n                          {/* Share Button */}\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => {\n                              setSharedMap((prev) => ({\n                                ...prev,\n                                [message.id]: true,\n                              }));\n                              setTimeout(() => {\n                                setSharedMap((prev) => ({\n                                  ...prev,\n                                  [message.id]: false,\n                                }));\n                              }, 2000);\n                              // Optional: trigger modal or logic\n                            }}\n                            className={cn(\n                              \"h-7 w-7 p-0 transition-colors\",\n                              sharedMap[message.id]\n                                ? \"bg-purple-200 text-purple-700 hover:bg-purple-200 hover:text-purple-700\"\n                                : \"hover:bg-purple-100 hover:text-purple-600\"\n                            )}\n                          >\n                            <Share2 className=\"h-3 w-3\" />\n                          </Button>\n                        </motion.div>\n                      </div>\n                    </div>\n                  );\n                })}\n\n                {isLoading && (\n                  <div className=\"flex gap-3 items-center\">\n                    <Avatar className=\"h-8 w-8 flex-shrink-0 mt-1\">\n                      <AvatarImage src=\"/placeholder.svg?height=32&width=32\" />\n                      <AvatarFallback className=\"text-xs font-medium p-[6px] bg-sky-500/10 text-sky-500\">\n                        <Waves />\n                      </AvatarFallback>\n                    </Avatar>\n                    <div className=\"flex-1 min-w-0 max-w-[80%] sm:max-w-[75%] md:max-w-[65%]\">\n                      <span className=\"text-sm text-sky-600 animate-pulse\">\n                        typing...\n                      </span>\n                    </div>\n                  </div>\n                )}\n\n                <div ref={messagesEndRef} />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Floating Input Area */}\n        <div>\n          <Card className=\"rounded-b-xl rounded-t-none border-t-sky-400 pt-4 pb-2 pr-2 pl-1 gap-1 bg-sky-600/5 border-b-0 border-l-0 border-r-0\">\n            <div className=\"relative\">\n              {/* Input */}\n              <Input\n                ref={inputRef}\n                placeholder=\"Write a query or click on that mic button...\"\n                autoFocus\n                className=\"min-h-[50px] max-h-[200px] resize-none pr-24 pl-12 pb-[9px] text-base border-none shadow-none focus-visible:ring-0 text-gray-800 placeholder:text-black/60 m-0\"\n                value={prompt}\n                onChange={(e) => setPrompt(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\") {\n                    e.preventDefault();\n                    handleSendMessage();\n                  } else if (e.key === \"Escape\") {\n                    e.preventDefault();\n                    setPrompt(\"\");\n                  } else if (e.key.toLowerCase() === \"v\" && e.shiftKey) {\n                    e.preventDefault();\n                    toggleVoiceRecognition();\n                  }\n                }}\n              />\n\n              {/* Sparkles Icon */}\n              <div className=\"absolute left-4 top-1/2 -translate-y-1/2 text-sky-500\">\n                <Sparkles className=\"h-5 w-5\" />\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex gap-2 backdrop-blur-md bg-sky-700/30 p-1 rounded-2xl shadow-inner\">\n                {/* Voice Toggle Button */}\n                <Button\n                  className=\"h-10 w-10 rounded-xl bg-sky-600 hover:bg-sky-700 text-white hover:scale-110 hover:shadow-lg transition-all duration-300 ease-out active:scale-105\"\n                  onClick={toggleVoiceRecognition}\n                >\n                  {isListening ? (\n                    <EarIcon className=\"h-6 w-6 animate-pulse text-white\" />\n                  ) : (\n                    <Mic className=\"h-6 w-6 text-white\" />\n                  )}\n                </Button>\n\n                {/* Send Button */}\n                <Button\n                  onClick={handleSendMessage}\n                  disabled={!prompt.trim() || isLoading}\n                  className={cn(\n                    \"h-10 w-10 p-0 rounded-xl transition-all duration-300 ease-out\",\n                    \"text-white bg-sky-700 hover:scale-110 hover:shadow-lg active:scale-105\",\n                    (!prompt.trim() || isLoading) &&\n                      \"opacity-50 cursor-not-allowed\"\n                  )}\n                >\n                  <AnimatePresence mode=\"wait\">\n                    {prompt == \"\" ? (\n                      <motion.div\n                        key=\"idle\"\n                        initial={{ opacity: 0, y: 10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        exit={{ opacity: 0 }}\n                        className=\"flex items-center justify-center\"\n                      >\n                        <SendHorizonal className=\"h-5 w-5 text-white\" />\n                      </motion.div>\n                    ) : (\n                      <motion.div\n                        key=\"ready\"\n                        initial={{ y: 20, opacity: 0 }}\n                        animate={{ y: 0, opacity: 1 }}\n                        exit={{ y: -20, opacity: 0 }}\n                        transition={{ duration: 0.4, ease: \"easeInOut\" }}\n                        className=\"flex items-center justify-center\"\n                      >\n                        <Send className=\"h-5 w-5 text-white -rotate-45\" />\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </Button>\n              </div>\n            </div>\n\n            {/* Helper Shortcuts */}\n            <div className=\"items-center justify-center text-[12px] text-gray-400 flex flex-wrap gap-x-10\">\n              <span>\n                Press <kbd className=\"kbd\">Esc</kbd> to Clear\n              </span>\n              <span>\n                Press <kbd className=\"kbd\">Enter</kbd> to send\n              </span>\n              <span>\n                Press <kbd className=\"kbd\">Shift + V</kbd> for Voice\n              </span>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}